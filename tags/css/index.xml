<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Css on AswinBlue</title>
    <link>https://aswinblue.github.io/Blog/tags/css/</link>
    <description>Recent content in Css on AswinBlue</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Jun 2022 21:55:38 +0900</lastBuildDate><atom:link href="https://aswinblue.github.io/Blog/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tailwind</title>
      <link>https://aswinblue.github.io/Blog/post/webapplication/tailwind/</link>
      <pubDate>Thu, 02 Jun 2022 21:55:38 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/Blog/post/webapplication/tailwind/</guid>
      <description>&lt;h1 id=&#34;tailwind&#34;&gt;Tailwind&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Css 프레임워크로 빠르고 효율적으로 css를 설정할 수 있는 툴이다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tailwindcss.com/docs&#34;&gt;Tailwind Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;tailwind 모듈 설치&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm install -D tailwindcss@latest&lt;/code&gt; 명령을 사용하여 설치가 가능하다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npx tailwindcss init&lt;/code&gt; 명령을 사용하면 현재 경로에 tailwind.config.js 파일이 생성되며, 현재 프로젝트에서 tailwind를 적용할 수 있게 된다.
&lt;ul&gt;
&lt;li&gt;tailwind.config.js 파일은 다음과 같이 구성된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;module.exports = {
  // 포함할 항목
  content: [&amp;#39;./src/**/*.{html,js,jsx,ts,tsx, mustache}&amp;#39;],
  // 제외할 항목 (최신 버전에서 사용되지 않는 문법)
  // purge: [&amp;#34;./src/**/*.html&amp;#34;, &amp;#34;./src/**/*.js&amp;#34;],
  // jit mode는 purge와 함께 세트로 사용되었고, 세트로 사라졌다.(?)
  // mode: process.env.NODE_ENV ? &amp;#39;jit&amp;#39; : undefined,
  darkMode: &amp;#39;class&amp;#39;, // [false, &amp;#39;mdeia&amp;#39;, &amp;#39;class&amp;#39;]
  theme: {
    fontFamily: {
      display: [&amp;#39;Open Sans&amp;#39;, &amp;#39;sans-serif&amp;#39;],
      body: [&amp;#39;Open Sans&amp;#39;, &amp;#39;sans-serif&amp;#39;],
    },
    extend: {
      fontSize: {
        14: &amp;#39;14px&amp;#39;,
      },
      backgroundColor: {
        &amp;#39;main-bg&amp;#39;: &amp;#39;#FAFBFB&amp;#39;,
        &amp;#39;main-dark-bg&amp;#39;: &amp;#39;#20232A&amp;#39;,
        &amp;#39;secondary-dark-bg&amp;#39;: &amp;#39;#33373E&amp;#39;,
        &amp;#39;light-gray&amp;#39;: &amp;#39;#F7F7F7&amp;#39;,
        &amp;#39;half-transparent&amp;#39;: &amp;#39;rgba(0, 0, 0, 0.5)&amp;#39;,
      },
      borderWidth: {
        1: &amp;#39;1px&amp;#39;,
      },
      borderColor: {
        color: &amp;#39;rgba(0, 0, 0, 0.1)&amp;#39;,
      },
      width: {
        400: &amp;#39;400px&amp;#39;,
        760: &amp;#39;760px&amp;#39;,
        780: &amp;#39;780px&amp;#39;,
        800: &amp;#39;800px&amp;#39;,
        1000: &amp;#39;1000px&amp;#39;,
        1200: &amp;#39;1200px&amp;#39;,
        1400: &amp;#39;1400px&amp;#39;,
      },
      height: {
        80: &amp;#39;80px&amp;#39;,
      },
      minHeight: {
        590: &amp;#39;590px&amp;#39;,
      },
      backgroundImage: {
        &amp;#39;hero-pattern&amp;#39;:
          &amp;#34;url(&amp;#39;https://demos.wrappixel.com/premium-admin-templates/react/flexy-react/main/static/media/welcome-bg-2x-svg.25338f53.svg&amp;#39;)&amp;#34;,
      },
    },
  },
  plugins: [],
};
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;tailwind는 react와 같은 framework에서는 자동으로 적용이 가능하지만, 그 외의 경우에는 postcss 등과 같은 모듈의 도움이 필요하다.&lt;/li&gt;
&lt;li&gt;tailwind 모듈 설치와 tailwind.config.js 구성이 끝났다면, tailwind로 작성된 css를 코드에 추가해줘야 한다. index.css에 아래 구문을 추가한다.
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@tailwind base;
@tailwind components;
@tailwind utilities;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;postcss&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Css</title>
      <link>https://aswinblue.github.io/Blog/post/webapplication/css/</link>
      <pubDate>Tue, 23 Jun 2020 20:38:05 +0900</pubDate>
      
      <guid>https://aswinblue.github.io/Blog/post/webapplication/css/</guid>
      <description>&lt;h1 id=&#34;css&#34;&gt;CSS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;특정 개체에 효과를 부과한다. 이를 declaration 이라 칭한다.&lt;/li&gt;
&lt;li&gt;중복의 제거 가능, 유지보수 수월, 가독성 증가&lt;/li&gt;
&lt;li&gt;위에서 부터 아래로 읽어가며 효과 적용, 중복 불가능한 효과에 대해서는 이전 효과가 사라짐&lt;/li&gt;
&lt;li&gt;tag 선택자 &amp;lt; calss 선택자 &amp;lt; id 선택자 로 우선 순위가 높다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;html 문서 안에 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그 안에 작성 가능&lt;/p&gt;
&lt;p&gt;ex ) &lt;code&gt;&amp;lt;style&amp;gt; a { color:black; } &amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;태그의 종류별로 속성 설정 가능&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기서 태그 a 는 선택자(selector)라고 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;선택자는 ,로 구별하여 함께 사용 가능&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://aswinblue.github.io/Blog/post/hugo/sample/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aswinblue.github.io/Blog/post/hugo/sample/</guid>
      <description>Sample article showcasing basic Markdown syntax and formatting for HTML elements.</description>
    </item>
    
  </channel>
</rss>
